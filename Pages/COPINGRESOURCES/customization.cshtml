@page
@model Pet_Reunion_Hub.Pages.COPINGRESOURCES.customizationModel
@{
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #F5F5DC; /* Light cream background */
            color: #333; /* Black text color */
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        .counselor-list {
            display: flex;
            justify-content: space-between;
            margin: 20px;
        }

        .counselor-box {
            background-color: #654321; /* Brown background */
            color: #fff; /* White text color */
            border-radius: 15px; /* Rounded corners */
            padding: 20px;
            width: 100%; /* Set the width of each counselor box */
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* Box shadow for a subtle lift */
        }

        .counselor-image {
            width: 50px; /* Set the width of the counselor image */
            border-radius: 50%; /* Make the image round */
            margin-bottom: 10px;
        }

        h2, p {
            margin: 0;
        }

        .counselor-contact {
            margin-top: 10px;
        }

        .highlight {
            background-color: yellow;
            color: black;
        }
    </style>
</head>
<body>

    <h1>Books and Reading Materials</h1>
    <br />
    <input style="border-radius:20px; height:40px; width: 500px;" type="text" id="searchInput" onkeyup="searchFunction()" placeholder="Search">
    <br />
    <br />
    @foreach (var RESOURCE in Model.RESOURCE)
    {
        <div class="counselor-box">

            <h3 class="searchable">@RESOURCE.TITLE </h3>

            <p><strong>Created on:</strong> @RESOURCE.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss")</p>

            <p><strong>Description:</strong>
            <p class="searchable">@(string.IsNullOrEmpty(RESOURCE.DESCRIPTION) ? "-" : RESOURCE.DESCRIPTION) </p>
            <br />

            <p><strong>URL Link to Resource:</strong>
            <p class="searchable">@(string.IsNullOrEmpty(RESOURCE.LINK) ? "-" : RESOURCE.LINK) </p>
            <br />

            <p><strong>Category:</strong>
            <p class="searchable"> @RESOURCE.TYPE</p>
            <br />

                        @if (!string.IsNullOrEmpty(RESOURCE.FILEURL))
                        {
                <p> <img src="@RESOURCE.FILEURL" alt="FILE" style="max-width: 500px;" /></p>
                        }
            <hr />
        </div>
        <br />
    }

</body>
</html>
<script>
    function searchFunction() {
        var input = document.getElementById("searchInput");
        var filter = input.value.toUpperCase();
        var reports = document.getElementsByClassName("counselor-box");

        for (var i = 0; i < reports.length; i++) {
            var report = reports[i];
            var searchableElements = report.getElementsByClassName("searchable");
            var found = false;

            for (var j = 0; j < searchableElements.length; j++) {
                var nameElement = searchableElements[j];
                var text = nameElement.textContent.toUpperCase();

                if (text.indexOf(filter) > -1) {
                    found = true;
                    // Highlight the matching text
                    var newText = text.replace(new RegExp('(' + filter + ')', 'ig'), '<span class="highlight">$1</span>');
                    nameElement.innerHTML = newText;
                }
            }

            if (found) {
                report.style.display = "";
            } else {
                report.style.display = "none";
            }
        }
    }

</script>