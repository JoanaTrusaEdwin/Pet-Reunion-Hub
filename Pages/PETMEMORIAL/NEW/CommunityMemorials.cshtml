@* @page
@model Pet_Reunion_Hub.Pages.PETMEMORIAL.NEW.CommunityMemorialsModel
@{
}
 *@

@page
@model Pet_Reunion_Hub.Pages.PETMEMORIAL.NEW.CommunityMemorialsModel
@{
    ViewData["Title"] = "Community Memorials";
}
@using System.Security.Claims

<h1>Monuments Among The Community</h1>

@foreach (var tribute in Model.PublicTributes)
{
    <div style="background-color: #fff; border-radius: 20px; padding: 20px; margin-bottom: 20px;">
    
        <h2>@tribute.PetName</h2>
        <p><b>By: @tribute.User.UserName  </b> </p>
        @if (!string.IsNullOrEmpty(tribute.TributePhoto))
        {
            <img src="@tribute.TributePhoto" alt="Tribute Photo" style="max-width: 500px;" />
        }
        <p><b>Type: </b> @tribute.PetType</p>
        <p> <b>Breed: </b> @tribute.PetBreed </p>
        <p><b>Sex:</b> @tribute.PetSex</p>
        <p><b>Date of Birth:</b> @tribute.DateOfBirth</p>
        <p><b>Date of Adoption:</b> @tribute.DateOfAdoption</p>
        <p><b>Date of Departure:</b> @tribute.DateOfDeparture</p>
        <p><b>Cause of Death:</b> @tribute.Cause</p>
        <p>@tribute.TributeText</p>

        <div style="background-color: lightgray; border-radius: 20px; padding: 20px; margin-bottom: 20px;">
            <!-- Comments Section -->
            <h3>Comments</h3>
            @if (tribute.Comments.Any())
            {
                
                    @foreach (var comment in tribute.Comments)
                    {
                    <div class="comment-container" style="background-color: #fff; border-radius: 5px; padding: 10px; margin-bottom: 10px;">
                        <strong>@comment.User.UserName:</strong> <!-- Display username -->
                        <br />
                        @comment.Content
                        <br/>
                        @if (User.Identity.IsAuthenticated && comment.UserId == User.FindFirstValue(ClaimTypes.NameIdentifier))
                        {
                        
                          <button type="button" class="btn btn-danger remove-btn" data-comment-id="@comment.Id">Delete</button>     
                        }
                    </div>
                    }
                
            }
            else
            {
                <p>No comments yet.</p>
            }

            <!-- Form to Add New Comment -->
            <form method="post">
                <input type="hidden" name="tributeId" value="@tribute.Id" />
                <div class="form-group">
                    <label for="commentContent">Add a comment:</label>
                    <textarea class="form-control" id="commentContent" name="commentContent" rows="3"></textarea>
                </div>
                <button type="submit" class="btn btn-primary">Post</button>
            </form>


            <hr />
        </div>
    <hr />
        <form asp-antiforgery="true">
            <input type="hidden" name="__RequestVerificationToken" value="@ViewData["RequestVerificationToken"]" />
            <!-- Your other form elements -->
        </form>
    </div>
 
}
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script
        src = "https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
       <script>
       

        var token = $('input[name="__RequestVerificationToken"]').val();

        $(document).ready(function () {
            $(".remove-btn").click(function () {
                var button = $(this);
                var commentId = button.data("comment-id");
                console.log("Comment ID:", commentId);

                if (confirm("Are you sure you want to delete this comment? This action is instantly applied and cannot be undone.")) {
                    $.ajax({
                        url: "https://localhost:7145/PETMEMORIAL/NEW/CommunityMemorials?handler=RemoveComment",
                        method: "POST",

                        headers: {
                            "RequestVerificationToken": token
                        },
                        data: { CommentId: commentId },
                        success: function (response) {
                            // Handle success
                            if (response.success) {

                                button.prev('img').remove(); // Remove the previous sibling image
                                button.prev('video').remove();
                                button.prev('audio').remove();
                                button.closest('.comment-container').remove();
                                button.remove(); // Remove the remove button itself
                                console.log("Comment removed");
                            } else {
                                console.log("Error: " + response.error);
                            }
                        },
                        error: function (xhr, status, error) {
                            // Handle error
                            console.log("Error removing comment: " + error);
                        }
                    });
                }
            });
        });
    </script>
}