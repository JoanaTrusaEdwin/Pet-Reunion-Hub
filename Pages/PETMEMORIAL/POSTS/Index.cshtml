@page
@model Pet_Reunion_Hub.Pages.PETMEMORIAL.POSTS.IndexModel

@{
    ViewData["Title"] = "Index";
    // Layout = "~/Pages/Shared/SignUp.cshtml";
}
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc.RazorPages
<script src="https://vjs.zencdn.net/7.10.4/video.js"></script>

<style>

    #createnew {
        border-radius: 5px;
        background-color: black;
        color: white;
        text-decoration: none;
        padding: 10px 20px;
        font-weight: bold;
        transition: background-color 0.3s;
    }

        #createnew:hover {
            background-color: #555;
        }

    #edit {
        border-radius: 5px;
        background-color: black;
        color: white;
        text-decoration: none;
        padding: 5px 10px;
        font-weight: bold;
    }


    #details {
        border-radius: 5px;
        background-color: #8b572a;
        color: white;
        text-decoration: none;
        padding: 5px 10px;
        font-weight: bold;
    }


    #delete {
        border-radius: 5px;
        background-color: red;
        color: white;
        text-decoration: none;
        padding: 5px 10px;
        font-weight: bold;
    }

    .highlight {
        background-color: yellow;
    }

    .media-container video,
    .media-container audio {
        vertical-align: middle;
    }
</style>
<h1>Your Moments and Stories</h1>

<p>
    Welcome to Your Moments and Stories. Here, you can store cherished memories of your beloved pet by creating different posts for each story.
    Feel free to add photos, videos, and audio recordings to preserve those special moments forever.
</p>
<p>
    <a asp-page="Create" id="createnew">Create a New Story</a>
</p>

<input style="border-radius:20px; height:40px; width: 500px;" type="text" id="searchInput" onkeyup="searchFunction()" placeholder="Search">
<br />


<br/>
    @foreach (var item in Model.Post.Reverse())
    {
        <div class="post" style="border: 1px solid #ccc; padding: 30px; margin-bottom: 20px;  border-radius: 5px; background-color: #fff;">
            
            @* <p><strong>Pet Name:</strong> @item.PetName</p> *@

        <p><strong>Title:</strong>
        <p class="searchable">@(string.IsNullOrEmpty(item.Title) ? "-" : item.Title) </p>
        <br />
           
        <p><strong>Caption:</strong>
        <p class="searchable">@(string.IsNullOrEmpty(item.Content) ? "-" : item.Content) </p>
        <br />

      @*       <p><strong>Visibility</strong> @item.IsPublic</p>
           *@

            @if (item.Media != null && item.Media.Any())
            {
                <p><strong>Media:</strong></p>
                <div class="media-container">
                    @foreach (var mediaItem in item.Media)
                    {
                       @*  var lastSlashIndex = mediaItem.MediaUrl.LastIndexOf('/');
                        var fileName = mediaItem.MediaUrl.Substring(lastSlashIndex + 1);
                        var fileNameWithoutUniqueIdentifier = fileName.Split('_').First(); *@

                        var lastSlashIndex = mediaItem.MediaUrl.LastIndexOf('/');
                        var fileName = mediaItem.MediaUrl.Substring(lastSlashIndex + 1);
                        var lastUnderscoreIndex = fileName.LastIndexOf('_');

                        if (lastUnderscoreIndex != -1)
                        {
                            var fileNameWithoutUniqueIdentifier = fileName.Substring(0, lastUnderscoreIndex);
                        <span style="display: block; font-size: small;">@fileNameWithoutUniqueIdentifier</span>
                        }
                        else
                        {
                        <span style="display: block; font-size: small;">@fileName</span>
                        }
                        @if (mediaItem.MediaType == "Image")
                        {
                        <img src="@mediaItem.MediaUrl" alt="Media Image" style="max-width: 200px; margin-right: 10px;">


                        }
                        else if (mediaItem.MediaType == "Video")
                        {
                        <video src="@mediaItem.MediaUrl" controls style="max-width: 200px; margin-right: 10px;"></video>
                      

                        }
                        else if (mediaItem.MediaType == "Audio")
                        {
                        <audio src="@mediaItem.MediaUrl" controls style="max-width: 200px; margin-right: 10px;"></audio>
                        
                        }
                    }
                </div>
            }
        <dt>Privacy Settings:</dt>
        <dd style="white-space: pre-wrap; overflow-wrap: break-word;">@item.IsPublic</dd>

        <p><strong>Created on:</strong> @item.CreatedAt.ToString("dd-MMM-yyyy HH:mm HH:mm:ss")</p>

            <p>
                <a asp-page="./Edit" asp-route-id="@item.Id" id="edit">Edit</a> 
                <a asp-page="./Details" asp-route-id="@item.Id" id="details">Details</a> 
                <a asp-page="./Delete" asp-route-id="@item.Id" id="delete">Delete</a>
            </p>
        </div>
    }
<script>
    function searchFunction() {
        var input = document.getElementById("searchInput");
        var filter = input.value.trim().toLowerCase(); // Convert filter to lowercase for case-insensitive search
        var reports = document.getElementsByClassName("post");

        for (var i = 0; i < reports.length; i++) {
            var report = reports[i];
            var searchableElements = report.getElementsByClassName("searchable");
            var found = false;

            for (var j = 0; j < searchableElements.length; j++) {
                var nameElement = searchableElements[j];
                var originalText = nameElement.textContent; // Store the original text
                var text = originalText.toLowerCase(); // Convert text to lowercase for case-insensitive search

                if (text.indexOf(filter) > -1) {
                    found = true;
                    // Highlight the matching text
                    var newText = highlightMatch(originalText, filter); // Pass the original text for highlighting
                    nameElement.innerHTML = newText;
                }
            }

            if (found) {
                report.style.display = "";
            } else {
                report.style.display = "none";
            }
        }
    }

    // Helper function to highlight the matched text
    function highlightMatch(text, filter) {
        var regex = new RegExp('(' + filter.replace(/[.*+?^${}()|[\]\\]/g, '\\$&') + ')', 'ig');
        return text.replace(regex, '<span class="highlight">$1</span>');
    }

</script>


