@page
@model Pet_Reunion_Hub.Pages.PETMEMORIAL.POSTS.EditModel

@{
    ViewData["Title"] = "Edit";
    // Layout = "~/Pages/Shared/SignUp.cshtml";
}
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc.RazorPages

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lost Pet Reporting</title>
    <style>
        body {
            /* font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; */
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        .container {
            max-width: 1500px;
            margin: 20px auto;
            background-color: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        label {
            display: block;
            margin-bottom: 8px;
        }

        input,
        select {
            width: 100%;
            padding: 10px;
            margin-bottom: 15px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }



        #submitbtn {
            background-color: black;
            color: #fff;
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            text-decoration: none;
            font-weight: bold; /* Make the text bold */
            font-size: 1.1em;
        }

        #delete {
            border-radius: 5px;
            background-color: red;
            color: white;
            text-decoration: none;
            padding: 5px 10px;
            font-weight: bold;
        }

        #tolist {
            background-color: #8b572a;
            color: #fff;
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            text-decoration: none;
            border-radius: 20px; /* Increase border-radius for a more rounded appearance */
            font-weight: bold;
        }
    </style>
</head>
<h1>Edit Story</h1>

<hr />
<div class="row">
    <div class="col-md-12">
        <form method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Post.Id" />
            <p>Post ID: @Model.Post.Id</p>
            <p><b>Created on:</b> @Model.Post.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss") (UTC)</p>

            <div class="form-group">
                <label asp-for="Post.Title" class="control-label"><b><span class="text-danger">*</span>Title</b></label>
                <textarea asp-for="Post.Title" class="form-control autosize  character-count"
                          required
                          id="pet-title-input"
                          rows="2"
                          maxlength="255"
                          oninput="handleInput(event, 'pet-title-count')"></textarea>
                <span id="pet-title-count" class="character-count-display">0/255</span>
                <span asp-validation-for="Post.Title" class="text-danger"></span>
            </div>
            <br />

            <div class="form-group">
                <label asp-for="Post.Content" class="control-label"><b>Description</b></label>
                <textarea asp-for="Post.Content" class="form-control autosize  character-count"
                          id="pet-content-input"
                          rows="15"
                          maxlength="10000"
                          oninput="handleInput(event, 'pet-content-count')"></textarea>
                <span id="pet-content-count" class="character-count-display">0/10000</span>
                <span asp-validation-for="Post.Content" class="text-danger"></span>
            </div>
            <br />
           <div>
                @if (Model.Post.Media != null && Model.Post.Media.Any())
                {
                    <p><strong>Media:</strong></p>
                    <div class="media-container">
                        @foreach (var Media in Model.Post.Media)
                        {
                           
                            var lastSlashIndex = Media.MediaUrl.LastIndexOf('/');
                            var fileName = Media.MediaUrl.Substring(lastSlashIndex + 1);
                            var lastUnderscoreIndex = fileName.LastIndexOf('_');

                            if (lastUnderscoreIndex != -1)
                            {
                                var fileNameWithoutUniqueIdentifier = fileName.Substring(0, lastUnderscoreIndex);
                                <span style="display: block; font-size: small;">@fileNameWithoutUniqueIdentifier</span>
                            }
                            else
                            {
                                <span style="display: block; font-size: small;">@fileName</span>
                            }



                            @if (Media.MediaType == "Image")
                            {
                                <img src="@Media.MediaUrl" alt="Media Image" style="max-width: 500px; margin-right: 10px;">
                                <button type="button" class="btn btn-danger remove-btn" data-media-id="@Media.Id">Remove</button>


                            }
                            else if (Media.MediaType == "Video")
                            {
                                <video src="@Media.MediaUrl" controls style="max-width: 500px; margin-right: 10px;"></video>
                                <button type="button" class="btn btn-danger remove-btn" data-media-id="@Media.Id">Remove</button>


                            }
                            else if (Media.MediaType == "Audio")
                            {
                                <audio src="@Media.MediaUrl" controls style="max-width: 500px; margin-right: 10px;"></audio>
                                <button type="button" class="btn btn-danger remove-btn" data-media-id="@Media.Id">Remove</button>

                            }
                        }
                    </div>
                }
           </div>
            @*  <div class="form-group">
                    <label asp-for="MediaFiles" class="control-label">Your Media Files</label>
                    <br />


                    @if (Model.Post.Media != null)
                    {
                        foreach (var Media in Model.Post.Media)
                        {
                            <img src="@Media.MediaUrl" alt="Additional Media" class="img-fluid" />
                            <button type="button" class="btn btn-danger remove-btn" data-media-id="@Media.Id">Remove</button>
                            <br/>
                        }
                    }
            </div> *@

              <div class="form-group photos-group">
                <label asp-for="MediaFiles" class="control-label"><b>Upload photos, videos, audios that perfectly capture your beloved pet's memories'</b></label>
                <input type="file" name="MediaFiles" class="form-control" onchange="validateAndPreviewPhotos(event)" />
                <span asp-validation-for="MediaFiles" class="text-danger"></span>
                <div class="additional-photos-preview"></div>
                <div class="form-group">
                    <img src="#" alt="Main Photo Preview" style="display: none; max-width: 200px;">
                </div>
                @* <button type="button" class="btn btn-primary" onclick="addMorePhotos()">+</button> *@
                <br/>
            </div>
            <button type="button" class="btn btn-primary" onclick="addMorePhotos()">+</button>

           @*  <div class="form-group">
                <img src="#" alt="Main Photo Preview" style="display: none; max-width: 200px;">
            </div>
            <br /> *@

            <div class="form-group">
                <label asp-for="Post.IsPublic" class="control-label"><b>Privacy Settings:</b></label>
                <select asp-for="Post.IsPublic" class="form-control" required>
                    
                    <option value="Private">Private</option>
                    <option value="Public">Public</option>
                </select>
                <span asp-validation-for="Post.IsPublic" class="text-danger"></span>
            </div>
            <input type="hidden" asp-for="Post.Id" />
            <div class="form-group">
                <input type="submit" id="submitbtn" value="Save" class="btn btn-primary" />
            </div>
          
        </form>

        <form asp-antiforgery="true">
            <input type="hidden" name="__RequestVerificationToken" value="@ViewData["RequestVerificationToken"]" />
            <!-- Your other form elements -->
        </form>

    </div>
</div>

<div>
    <a asp-page="./Index" id="tolist">Back to My Posts</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script
        src = "https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
       <script>
        // var token = $('input[name="__RequestVerificationToken"]').val();
        // $(document).ready(function () {
        //     $(".remove-btn").click(function () {
        //         var button = $(this); // Store reference to the button element
        //         var mediaId = button.data("media-id");
        //         $.ajax({
        //             url: "https://localhost:7145/PETMEMORIAL/POSTS/Edit?handler=RemoveMedia"
        //             , // Adjust the URL to match your endpoint
        //             method: "POST",
        //             contentType: "application/json", // Specify content type
        //             data: JSON.stringify({ MediaId: mediaId }),// Serialize mediaId as a simple integer
        //             success: function (response) {
        //                 // Handle success
        //                 button.closest('div').remove();
        //                 console.log("Image removed");
        //             },
        //             error: function (xhr, status, error) {
        //                 // Handle error
        //                 console.log("Error removing image " + error);
        //             }
        //         });
        //     });
        // });

        var token = $('input[name="__RequestVerificationToken"]').val();

        $(document).ready(function () {
            $(".remove-btn").click(function () {
                var button = $(this);
                var mediaId = button.data("media-id");
                console.log("Media ID:", mediaId);

                if (confirm("Are you sure you want to delete this file? This action is instantly applied and cannot be undone.")) {
                    var baseUrl = window.location.origin; // Get the base URL of the current environment
                    var removeMediaUrl = baseUrl + "/PETMEMORIAL/POSTS/Edit?handler=RemoveMedia";
                    $.ajax({
                        // url: "https://localhost:7145/PETMEMORIAL/POSTS/Edit?handler=RemoveMedia",
                        url: removeMediaUrl,
                        method: "POST",

                        headers: {
                            "RequestVerificationToken": token
                        },
                        data: { MediaId: mediaId },
                        success: function (response) {
                            // Handle success
                            if (response.success) {

                                button.prev('img').remove(); // Remove the previous sibling image
                                button.prev('video').remove();
                                button.prev('audio').remove();
                                button.remove(); // Remove the remove button itself
                                console.log("Image removed");
                            } else {
                                console.log("Error: " + response.error);
                            }
                        },
                        error: function (xhr, status, error) {
                            // Handle error
                            console.log("Error removing image: " + error);
                        }
                    });
                }
            });
        });


        // document.querySelectorAll('textarea.autosize').forEach(function (element) {
        //     autoExpandTextarea(element);
        // });

        //TO CONTROL NUMBER OF CHARACTERS
        function updateCharacterCount(inputId, countId, limit) {
            var input = document.getElementById(inputId);
            var count = document.getElementById(countId);
            console.log("Input value:", input.value);
            console.log("Input length:", input.value.length);
            count.textContent = input.value.length + "/" + limit;
        }

        // Call this function when the input changes
        function handleInput(event, countId) {
            var inputId = event.target.id;
            var limit = event.target.getAttribute('maxlength') || 0;
            updateCharacterCount(inputId, countId, limit);
        }

        var characterCountInputs = document.querySelectorAll('.character-count');
        characterCountInputs.forEach(function (input) {
            input.addEventListener('input', function (event) {
                var countId = input.getAttribute('data-count-id');
                handleInput(event, countId);
            });
        });
       

        //TO PREVENT NULL
        function validateForm() {
            var isValid = true;
            var unfilledFields = [];

            // Check each required input field
            var inputs = document.querySelectorAll('input[required]');
            inputs.forEach(function (input) {
                if (!input.value.trim()) {
                    isValid = false;
                    unfilledFields.push(input.name);
                }
            });

            // Display warning message if any required field is empty
            if (!isValid) {
                var message = 'Please fill in the following fields:\n';
                unfilledFields.forEach(function (field) {
                    message += '- ' + field + '\n';
                });
                alert(message);
            }

            return isValid;
        }

        function validateAndPreviewPhotos(event) {
            var files = event.target.files;
            for (var i = 0; i < files.length; i++) {
                var file = files[i];
                // Check if the file type is video
                if (file.type.startsWith("video/") && file.size > 2.1 * 1024 * 1024) { // 2.1 MB limit
                    alert('Video file size exceeds the limit of 2.1 MB');
                    event.target.value = '';
                    return;
                }
                // You can add more conditions for other file types if needed
            }
            previewAdditionalPhotos(event);
        }

        function addMorePhotos() {
            var input = document.createElement('input');
            input.type = 'file';
            input.multiple = true;
            input.className = 'form-control';
            input.name = 'MediaFiles';
            input.onchange = function (event) {
                validateAndPreviewPhotos(event);
            };

            var photosGroup = document.querySelector('.form-group.photos-group');
            photosGroup.appendChild(input);

            var previewContainer = document.createElement('div');
            previewContainer.className = 'additional-photos-preview';
            photosGroup.appendChild(previewContainer);

            
        }
        

        //TO PREVIEW EACH PHOTO
        function previewAdditionalPhotos(event) {
            var input = event.target;
            var previewContainer = input.nextElementSibling;
            previewContainer.innerHTML = '';

            for (var i = 0; i < input.files.length; i++) {
                var file = input.files[i];
                var reader = new FileReader();

                if (file.type.startsWith("image/")) {
                    reader.onload = (function (file) {
                        return function (event) {
                            var img = document.createElement('img');
                            img.src = event.target.result;
                            img.className = 'preview-image';
                            img.style.maxWidth = '100px';

                            var previewImg = document.createElement('img');
                            previewImg.src = event.target.result;
                            previewImg.className = 'preview-image';
                            previewImg.style.maxWidth = '200px';
                            previewImg.style.backgroundColor = 'transparent';

                            previewContainer.appendChild(previewImg);

                            var removeBtn = document.createElement('button');
                            removeBtn.className = 'remove-btn btn btn-danger';
                            removeBtn.textContent = 'Remove';
                            removeBtn.addEventListener('click', function () {
                                input.value = '';
                                previewContainer.innerHTML = '';
                            });
                            previewContainer.appendChild(removeBtn);
                        };
                    })(file);
                } else if (file.type.startsWith("video/")) {
                    reader.onload = (function (file) {
                        return function (event) {
                            var video = document.createElement('video');
                            video.src = event.target.result;
                            video.className = 'preview-video';
                            video.controls = true;
                            video.style.maxWidth = '500px';

                            var previewVideo = document.createElement('video');
                            previewVideo.src = event.target.result;
                            previewVideo.className = 'preview-video';
                            previewVideo.controls = true;
                            previewVideo.style.maxWidth = '300px';
                            previewVideo.style.backgroundColor = 'transparent';

                            previewContainer.appendChild(previewVideo);

                            var removeBtn = document.createElement('button');
                            removeBtn.className = 'remove-btn btn btn-danger';
                            removeBtn.textContent = 'Remove';
                            removeBtn.addEventListener('click', function () {
                                input.value = '';
                                previewContainer.innerHTML = '';
                            });
                            previewContainer.appendChild(removeBtn);
                        };
                    })(file);
                } else if (file.type.startsWith("audio/")) {
                    reader.onload = (function (file) {
                        return function (event) {
                            var audio = document.createElement('audio');
                            audio.src = event.target.result;
                            audio.className = 'preview-audio';
                            audio.controls = true;
                            audio.style.maxWidth = '300px';

                            var previewAudio = document.createElement('audio');
                            previewAudio.src = event.target.result;
                            previewAudio.className = 'preview-audio';
                            previewAudio.controls = true;
                            previewAudio.style.maxWidth = '300px';
                            previewAudio.style.backgroundColor = 'transparent';

                            previewContainer.appendChild(previewAudio);

                            var removeBtn = document.createElement('button');
                            removeBtn.className = 'remove-btn btn btn-danger';
                            removeBtn.textContent = 'Remove';
                            removeBtn.addEventListener('click', function () {
                                input.value = '';
                                previewContainer.innerHTML = '';
                            });
                            previewContainer.appendChild(removeBtn);
                        };
                    })(file);
                }

                reader.readAsDataURL(file);
            }
        }
    </script>
}
