@* @page
@model Pet_Reunion_Hub.Pages.LOSTPETREPORTING.NEW.IndexModel

@{
    ViewData["Title"] = "Index";
}
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc.RazorPages

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CreateReport[0].PetName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreateReport[0].PetBreed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreateReport[0].PetGender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreateReport[0].DateOfBirth)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreateReport[0].PetMicrochipID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreateReport[0].LastSeenLocation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreateReport[0].LastSeenTime)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.CreateReport[0].MainPhoto)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.CreateReport[0].ContactInformation)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.CreateReport) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.PetName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PetBreed)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PetGender)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateOfBirth)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PetMicrochipID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastSeenLocation)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastSeenTime)
            </td>


            <td>
                @* @Html.DisplayFor(modelItem => item.MainPhoto) 
                    <img src="@item.MainPhoto" alt="Pet Photo" style="max-width: 100px;" />
            </td>


            <td>

                @Html.DisplayFor(modelItem => item.ContactInformation)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
*@
@page
@model Pet_Reunion_Hub.Pages.LOSTPETREPORTING.NEW.IndexModel

@{
    ViewData["Title"] = "Index";
}
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc.RazorPages

<style>
    


    #createnew {
        border-radius: 5px;
        background-color: #8b572a;
        color: white;
        text-decoration: none;
        padding: 10px 20px;
        font-weight: bold;
        transition: background-color 0.3s;
    }

        #createnew:hover {
            background-color: #555; 
        }

    #edit {
        border-radius: 5px;
        background-color: black;
        color: white;
        text-decoration: none;
        padding: 5px 10px;
        font-weight: bold;
    }

   
    #details {
        border-radius: 5px;
        background-color: #8b572a;
        color: white;
        text-decoration: none;
        padding: 5px 10px;
        font-weight: bold;
    }

    
    #delete {
        border-radius: 5px;
        background-color: red;
        color: white;
        text-decoration: none;
        padding: 5px 10px;
        font-weight: bold;
    }


    .highlight {
        background-color: yellow;
    }

    #home {
        background-color: black;
        color: white;
        padding: 10px 15px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        text-decoration: none;
        font-weight: bold; /* Make the text bold */
        font-size: 1.1em;
    }
</style>

<h1>My Reports</h1>
<a href="/LOSTPETREPORTING/LPRHome" class="box" id="home">
    Back to Lost Pet Reporting
    <br />
</a>
<br />
<p>
    <a asp-page="Create" id="createnew">Make a New Report</a>
</p>
<br />

<input style="border-radius:20px; height:40px; width: 500px;" type="text" id="searchInput" onkeyup="searchFunction()" placeholder="Search">
<br />
<br />
<div class="report-container">


    @foreach (var item in Model.CreateReport.OrderByDescending(r => r.CreatedAt))
    {
        <div class="report" style="border: 1px solid #ccc; padding: 30px; margin-bottom: 20px;  border-radius: 5px; background-color: #fff;">

            <h2 style="white-space: pre-wrap; overflow-wrap: break-word;" class="searchable">@item.PetName</h2>
            <br />

            <h5 style="white-space: pre-wrap; overflow-wrap: break-word;">Owner Contact Information:</h5>
            <p style="white-space: pre-wrap; overflow-wrap: break-word;" class="searchable">@item.ContactInformation</p>
            <br />

            <div class="photos">
                @foreach (var photo in item.ReportPhotos)
                {
                    <img src="@photo.PhotoUrl" style="max-width: 400px; height: auto;" />
                }
            </div>
            <p><strong>General Location:</strong></p>
            <p style="white-space: pre-wrap; overflow-wrap: break-word;"  class="searchable"> @item.GenLoc</p>
            <br />

            <p><strong>Last Seen Location:</strong></p>
            <p style="white-space: pre-wrap; overflow-wrap: break-word;" class="searchable"> @item.LastSeenLocation</p>
            <br />

            <p><strong>Last Seen Time:</strong></p>
            <p class="searchable">@(item.LastSeenTime != null ? item.LastSeenTime.Value.ToString("dd-MMM-yyyy HH:mm") : "-")</p>
            <br />

            <p><strong>Estimated Age:</strong></p>
            <p style="white-space: pre-wrap; overflow-wrap: break-word;" class="searchable"> @item.Age</p>
            <br />

            <p><strong>Pet Microchip ID:</strong></p>
            <p style="white-space: pre-wrap; overflow-wrap: break-word;" class="searchable"> @(string.IsNullOrEmpty(item.PetMicrochipID) ? "-" : item.PetMicrochipID)</p>
            <br />

            <p><strong>Type:</strong></p>
            <p style="white-space: pre-wrap; overflow-wrap: break-word;" class="searchable"> @item.PetType</p>
            <br />

            <p><strong>Type and Breed:</strong></p>
            <p style="white-space: pre-wrap; overflow-wrap: break-word;" class="searchable"> @item.PetBreed</p>
            <br />

            <p><strong>Sex:</strong></p>
            <p style="white-space: pre-wrap; overflow-wrap: break-word;" class="searchable">@item.PetGender</p>
            <br />


            <p><strong>Additional Description:</strong></p>
            <p style="white-space: pre-wrap; overflow-wrap: break-word;" class="searchable"> @item.AdditionalDescription</p>
            <br />

            <p><strong>Date of Birth:</strong></p>
            <p class="searchable"> @(item.DateOfBirth != null ? item.DateOfBirth.Value.ToString("dd-MMM-yyyy HH:mm") : "-")</p>
            <br />

            <p><strong>Created on:</strong></p>
            <p class="searchable">@item.CreatedAt.ToString("dd-MMM-yyyy HH:mm:ss")</p>
            <br />
            @*  COMMENT *@
            <p>
                <a asp-page="./Edit" asp-route-id="@item.Id" id="edit">Edit</a>
                <a asp-page="./Details" asp-route-id="@item.Id" id="details">Details</a>
                <a asp-page="./Delete" asp-route-id="@item.Id" id="delete">Delete</a>
            </p>
        </div>
        @*  <p>
            <a asp-page="./Edit" asp-route-id="@item.Id" id="edit">Edit</a> 
            <a asp-page="./Details" asp-route-id="@item.Id" id="details">Details</a> 
            <a asp-page="./Delete" asp-route-id="@item.Id" id="delete">Delete</a>
        </p> *@
    
    }

</div>
<script>
    function searchFunction() {
        var input = document.getElementById("searchInput");
        var filter = input.value.trim().toLowerCase(); // Convert filter to lowercase for case-insensitive search
        var reports = document.getElementsByClassName("report");

        for (var i = 0; i < reports.length; i++) {
            var report = reports[i];
            var searchableElements = report.getElementsByClassName("searchable");
            var found = false;

            for (var j = 0; j < searchableElements.length; j++) {
                var nameElement = searchableElements[j];
                var originalText = nameElement.textContent; // Store the original text
                var text = originalText.toLowerCase(); // Convert text to lowercase for case-insensitive search

                if (text.indexOf(filter) > -1) {
                    found = true;
                    // Highlight the matching text
                    var newText = highlightMatch(originalText, filter); // Pass the original text for highlighting
                    nameElement.innerHTML = newText;
                }
            }

            if (found) {
                report.style.display = "";
            } else {
                report.style.display = "none";
            }
        }
    }

    // Helper function to highlight the matched text
    function highlightMatch(text, filter) {
        var regex = new RegExp('(' + filter.replace(/[.*+?^${}()|[\]\\]/g, '\\$&') + ')', 'ig');
        return text.replace(regex, '<span class="highlight">$1</span>');
    }

</script>





 