@* @page
@model Pet_Reunion_Hub.Pages.LOSTPETREPORTING.NEW.AreaReportsModel
@{
} *@
@page
@model Pet_Reunion_Hub.Pages.LOSTPETREPORTING.NEW.CityReportsModel
@{
    ViewData["Title"] = "Area Reports";
}

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc.RazorPages

<br/>
<div class="button-container">
    <a href="/LOSTPETREPORTING/NEW/AllReports" class="box" id="global">
        <b>Lost Pets Around The World</b>
    </a>


    <a href="/LOSTPETREPORTING/NEW/CountryReports" class="box" id="country">
        <b>Lost Pets in Your Country</b>
    </a>


    <a href="/LOSTPETREPORTING/NEW/StateReports" class="box" id="state">
        <b>Lost Pets in Your State</b>
    </a>
</div>
<br/>

<h1>Reports in Your Area</h1>
<input style="border-radius:20px; height:40px; width: 500px;" type="text" id="searchInput" onkeyup="searchFunction()" placeholder="Search">
<br />
<br />

<div class="report-container">
  

    @foreach (var report in Model.CreateReport.Reverse())
    {
        <div class="report">

            <h2 class="searchable">@report.PetName</h2>
            <br/>

            <h5>Owner Contact Information:</h5>
            <p class="searchable">@report.ContactInformation</p>
            <br/>
          
            <div class="photos">
                @foreach (var photo in report.ReportPhotos)
                {
                    <img src="@photo.PhotoUrl" maxwidth="500" maxheight="1000" />
                }
            </div>
            <p><strong>General Location:</strong></p>
            <p class="searchable"> @report.GenLoc</p>
            <br />

            <p><strong>Last Seen Location:</strong></p>
            <p class="searchable"> @report.LastSeenLocation</p>
            <br />

            <p><strong>Last Seen Time:</strong></p>
            <p class="searchable"> @report.LastSeenTime.Value.ToShortTimeString()</p>
            <br />


            <p><strong>Estimated Age:</strong></p>
            <p class="searchable"> @report.Age</p>
            <br />

            <p><strong>Pet Microchip ID:</strong></p>
            <p class="searchable"> @(string.IsNullOrEmpty(report.PetMicrochipID) ? "Not specified" : report.PetMicrochipID)</p>
            <br />

            <p><strong>Type and Breed:</strong></p>
            <p class="searchable"> @report.PetBreed</p>
            <br />

            <p><strong>Sex:</strong></p>
            <p class="searchable">@report.PetGender</p>
            <br />


            <p><strong>Additional Description:</strong></p>
            <p class="searchable"> @report.AdditionalDescription</p>
            <br />

            <p><strong>Date of Birth:</strong></p>
            <p class="searchable"> @(report.DateOfBirth != null ? report.DateOfBirth.Value.ToShortDateString() : "Not specified")</p>
            <br />

            <p><strong>Created on:</strong></p>
            <p class="searchable">@report.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss")</p>
            <br />
            @*  COMMENT *@
          
        </div>
    }

</div>

<style>
    .button-container {
        display: flex;
        justify-content: space-between; /* Adjust as needed */
    }
    #global{
        background-color: black;
        color: #fff;
        padding: 10px 15px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        text-decoration: none;
        font-weight: bold; /* Make the text bold */
        font-size: 1.1em;
    }

    #country{
        background-color: #8b572a;
        color: #fff;
        padding: 10px 15px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        text-decoration: none;
        font-weight: bold; /* Make the text bold */
        font-size: 1.1em;
    }

    #state{
        background-color: white;
        color: black;
        padding: 10px 15px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        text-decoration: none;
        font-weight: bold; /* Make the text bold */
        font-size: 1.1em;
    }
    .report-container {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    .report {
        background-color: white;
        border-radius: 20px;
        padding: 20px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        width: 1000px;
    }

    .photos {
        margin-top: 10px;
    }

        .photos img {
            margin-right: 5px;
        }

    .highlight {
        background-color: yellow;
    }

</style>

<script>
    function searchFunction() {
        var input = document.getElementById("searchInput");
        var filter = input.value.toUpperCase();
        var reports = document.getElementsByClassName("report");

        for (var i = 0; i < reports.length; i++) {
            var report = reports[i];
            var searchableElements = report.getElementsByClassName("searchable");
            var found = false;

            for (var j = 0; j < searchableElements.length; j++) {
                var nameElement = searchableElements[j];
                var text = nameElement.textContent.toUpperCase();

                if (text.indexOf(filter) > -1) {
                    found = true;
                    // Highlight the matching text
                    var newText = text.replace(new RegExp('(' + filter + ')', 'ig'), '<span class="highlight">$1</span>');
                    nameElement.innerHTML = newText;
                }
            }

            if (found) {
                report.style.display = "";
            } else {
                report.style.display = "none";
            }
        }
    }
</script>

